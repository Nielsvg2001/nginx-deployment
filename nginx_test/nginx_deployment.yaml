apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: nginx
  namespace: nginx
spec:
  secretName: nginx.group2k8s.traineeship-2023.axxes.cloud
  issuerRef:
    name: ssl-issuer
    kind: ClusterIssuer
  dnsNames:
    - nginx.group2k8s.traineeship-2023.axxes.cloud
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx # Name of the deployment
  namespace: nginx # Name of the namespace
  labels:
    app: nginx # Name of your application
spec:
  selector:
    matchLabels:
      app: nginx # Name of your application
  replicas: 1 # Number of replicas
  template:
    metadata:
      labels:
        app: nginx # Name of your application
    spec:
      containers:
      - name: nginx # Name of the container
        image: nginx:latest # The image you want to run
        ports:
        # Ports are the ports that your application uses.
        - containerPort: 80 # The port that your application uses
tls:
  - hosts:
    - nginx.group2k8s.traineeship-2023.axxes.cloud # Your hostname
    secretName: nginx.group2k8s.traineeship-2023.axxes.cloud  # Your TLS Secret
---
apiVersion: v1
kind: Service
metadata:
  name:  nginx
  namespace: nginx
spec:
  selector:
    app:  nginx
  type:  ClusterIP
  ports:
  - name:  http
    port:  80

---

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: nginx
  namespace: nginx
  annotations:
    kubernetes.io/ingress.class: traefik
    traefik.ingress.kubernetes.io/router.entrypoints: web, websecure
spec:
  rules:
  - http:
      paths:
      - path: /nginx
        pathType: Prefix
        backend:
          service:
            name: nginx
            port:
              number: 80